-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

create table public.owner (
id uuid default gen_random_uuid() primary key,
first_name varchar(255) not null,
last_name varchar(255) not null,
email varchar(255) not null,
		added timestamp default (now() at time zone 'utc'),
		updated timestamp default (now() at time zone 'utc')
);
-- Permissions
alter table public.owner owner to postgres;

grant all on
table public.owner to postgres;

-- public.book definition

-- Drop table

-- DROP TABLE public.book;

CREATE TABLE public.book (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	title varchar(255) NOT NULL,
	author varchar(255) NOT NULL,
	edition varchar(50) NULL,
	owner_id uuid NULL,
	available bool DEFAULT true NULL,
	added timestamp DEFAULT (now() AT TIME ZONE 'utc'::text) NULL,
	updated timestamp DEFAULT (now() AT TIME ZONE 'utc'::text) NULL,
	CONSTRAINT pk_book_id PRIMARY KEY (id)
);
COMMENT ON TABLE public.book IS 'holds books data';

-- Permissions

ALTER TABLE public.book OWNER TO postgres;
GRANT ALL ON TABLE public.book TO postgres;




CREATE TABLE IF NOT EXISTS public.lender
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),   
    first_name character varying(255) NOT NULL,
    last_name character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    active boolean default false,
    version int NOT null check (version > 0),
    CONSTRAINT pk_lender_id PRIMARY KEY (id)
);
COMMENT ON TABLE public.lender
    IS 'holds lender data';

create table public.book_lender (
	book_id uuid null,
	owner_id uuid null,
	book_owner_id uuid default gen_random_uuid() primary key,
	added timestamp default (now() at time zone 'utc'),
	updated timestamp default (now() at time zone 'utc')
	
);

comment on
table public.book_lender is 'holds book and owner relationship details';
-- Permissions

alter table public.book_lender owner to postgres;

grant all on
table public.book_lender to postgres;
-- public.book_lender foreign keys

alter table public.book_lender add constraint book_lender_owner_id_fkey foreign key (owner_id) references public.owner(id) on
delete
	restrict on
	update
	restrict;